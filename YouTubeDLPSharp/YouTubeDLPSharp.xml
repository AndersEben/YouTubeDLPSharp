<?xml version="1.0"?>
<doc>
    <assembly>
        <name>YouTubeDLPSharp</name>
    </assembly>
    <members>
        <member name="T:YouTubeDLPSharp.Data.FormatData">
            <summary>
            Represents information for one available download format for one video as extracted by youtube-dl.
            </summary>
        </member>
        <member name="T:YouTubeDLPSharp.Data.MetadataType">
            <summary>
            Possible types of media fetched by youtube-dlp.
            </summary>
        </member>
        <member name="T:YouTubeDLPSharp.Data.VideoData">
            <summary>
            Represents the video metadata for one video as extracted by youtube-dlp.
            </summary>
        </member>
        <member name="T:YouTubeDLPSharp.DownloadProgress">
            <summary>
            Provides status information for a video download.
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.DownloadProgress.State">
            <summary>
            Video download status.
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.DownloadProgress.Progress">
            <summary>
            Download progress value between 0 and 1.
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.DownloadProgress.TotalDownloadSize">
            <summary>
            The total download size string as outputted by youtube-dlp.
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.DownloadProgress.DownloadSpeed">
            <summary>
            The download speed string as outputted by youtube-dlp.
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.DownloadProgress.ETA">
            <summary>
            The estimated remaining time of the download as outputted by youtube-dlp.
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.DownloadProgress.VideoIndex">
            <summary>
            The current video index (starting at 1) if mutliple items are downloaded at once.
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.DownloadProgress.Data">
            <summary>
            Additional optional progress information.
            </summary>
        </member>
        <member name="M:YouTubeDLPSharp.DownloadProgress.#ctor(YouTubeDLPSharp.DownloadState,System.Single,System.String,System.String,System.String,System.Int32,System.String)">
            <summary>
            Creates a new instance of class DownloadProgress.
            </summary>
        </member>
        <member name="T:YouTubeDLPSharp.Options.DownloadMergeFormat">
            <summary>
            Possible video merging formats.
            </summary>
        </member>
        <member name="T:YouTubeDLPSharp.Options.AudioConversionFormat">
            <summary>
            Possible audio formats for audio conversion.
            </summary>
        </member>
        <member name="T:YouTubeDLPSharp.Options.VideoRecodeFormat">
            <summary>
            Possible video formats for video conversion.
            </summary>
        </member>
        <member name="T:YouTubeDLPSharp.Options.IOption">
            <summary>
            Interface for one youtube-dlp option.
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.IOption.DefaultOptionString">
            <summary>
            The default string representation of the option flag.
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.IOption.OptionStrings">
            <summary>
            An array of all possible string representations of the option flag.
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.IOption.IsSet">
            <summary>
            True if the option flag is set; false otherwise.
            </summary>
        </member>
        <member name="M:YouTubeDLPSharp.Options.IOption.SetFromString(System.String)">
            <summary>
            Sets the option value from a given string representation.
            </summary>
            <param name="s">The string (including the option flag).</param>
        </member>
        <member name="T:YouTubeDLPSharp.Options.Option`1">
            <summary>
            Represents one youtube-dlp option.
            </summary>
            <typeparam name="T">The type of the option.</typeparam>
        </member>
        <member name="P:YouTubeDLPSharp.Options.Option`1.DefaultOptionString">
            <summary>
            The default string representation of the option flag.
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.Option`1.OptionStrings">
            <summary>
            An array of all possible string representations of the option flag.
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.Option`1.IsSet">
            <summary>
            True if the option flag is set; false otherwise.
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.Option`1.Value">
            <summary>
            The option value.
            </summary>
        </member>
        <member name="M:YouTubeDLPSharp.Options.Option`1.#ctor(System.String[])">
            <summary>
            Creates a new instance of class Option.
            </summary>
        </member>
        <member name="M:YouTubeDLPSharp.Options.Option`1.SetFromString(System.String)">
            <summary>
            Sets the option value from a given string representation.
            </summary>
            <param name="s">The string (including the option flag).</param>
        </member>
        <member name="F:YouTubeDLPSharp.Options.OptionSet.Default">
            <summary>
            The default option set (if no options are explicitly set).
            </summary>
        </member>
        <member name="M:YouTubeDLPSharp.Options.OptionSet.WriteConfigFile(System.String)">
            <summary>
            Writes all options to a config file with the specified path.
            </summary>
        </member>
        <member name="M:YouTubeDLPSharp.Options.OptionSet.GetOptionFlags">
            <summary>
            Returns an enumerable of all option flags.
            </summary>
            <returns></returns>
        </member>
        <member name="M:YouTubeDLPSharp.Options.OptionSet.OverrideOptions(YouTubeDLPSharp.Options.OptionSet)">
            <summary>
            Creates a clone of this option set and overrides all options with non-default values set in the given option set.
            </summary>
            <param name="overrideOptions">All non-default option values of this option set will be copied to the cloned option set.</param>
            <returns>A cloned option set with all specified options overriden.</returns>
        </member>
        <member name="M:YouTubeDLPSharp.Options.OptionSet.FromString(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates an option set from an array of command-line option strings.
            </summary>
            <param name="lines">An array containing one command-line option string per item.</param>
            <returns>The parsed OptionSet.</returns>
        </member>
        <member name="M:YouTubeDLPSharp.Options.OptionSet.LoadConfigFile(System.String)">
            <summary>
            Loads an option set from a youtube-dlp config file.
            </summary>
            <param name="path">The path to the config file.</param>
            <returns>The loaded OptionSet.</returns>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.CurrentFragments">
            <summary>
            Number of fragments of a dash/hlsnative
            video that should be download concurrently
            (default is 1)
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.LimitRate">
            <summary>
            Maximum download rate in bytes per
            second (e.g. 50K or 4.2M)
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.ThrottledRate">
            <summary>
            Minimum download rate in bytes per second
            below which throttling is assumed and the
            video data is re-extracted(e.g. 100K)
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.Retries">
            <summary>
            Number of retries (default is 10), or
            &quot;infinite&quot;.
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.FragmentRetries">
            <summary>
            Number of retries for a fragment
            (default is 10), or &quot;infinite&quot; (DASH,
            hlsnative and ISM)
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.SkipUnavailableFragments">
            <summary>
            Skip unavailable fragments (DASH,
            hlsnative and ISM)
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.AbortOnUnavailableFragment">
            <summary>
            Abort downloading when some fragment is
            not available
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.KeepFragments">
            <summary>
            Keep downloaded fragments on disk after
            downloading is finished; fragments are
            erased by default
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.BufferSize">
            <summary>
            Size of download buffer (e.g. 1024 or
            16K) (default is 1024)
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.NoResizeBuffer">
            <summary>
            Do not automatically adjust the buffer
            size. By default, the buffer size is
            automatically resized from an initial
            value of SIZE.
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.HttpChunkSize">
            <summary>
            Size of a chunk for chunk-based HTTP
            downloading (e.g. 10485760 or 10M)
            (default is disabled). May be useful
            for bypassing bandwidth throttling
            imposed by a webserver (experimental)
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.PlaylistReverse">
            <summary>
            Download playlist videos in reverse
            order
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.PlaylistRandom">
            <summary>
            Download playlist videos in random
            order
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.XattrSetFilesize">
            <summary>
            Set file xattribute ytdl.filesize with
            expected file size
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.HlsUseMpegts">
            <summary>
            Use the mpegts container for HLS
            videos, allowing to play the video
            while downloading (some players may not
            be able to play it)
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.BatchFile">
            <summary>
            File containing URLs to download (&#x27;-&#x27;
            for stdin), one URL per line. Lines
            starting with &#x27;#&#x27;, &#x27;;&#x27; or &#x27;]&#x27; are
            considered as comments and ignored.
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.Paths">
            <summary>
            File containing URLs to download (&#x27;-&#x27;
            for stdin), one URL per line. Lines
            starting with &#x27;#&#x27;, &#x27;;&#x27; or &#x27;]&#x27; are
            considered as comments and ignored.
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.Output">
            <summary>
            Output filename template, see the
            &quot;OUTPUT TEMPLATE&quot; for all the info
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.OutputNaPlaceholder">
            <summary>
            ER  Placeholder value for unavailable meta
            fields in output filename template
            (default is &quot;NA&quot;)
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.RestrictFilenames">
            <summary>
            Restrict filenames to only ASCII
            characters, and avoid &quot;&amp;&quot; and spaces in
            filenames
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.NoOverwrites">
            <summary>
            Do not overwrite files
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.Continue">
            <summary>
            Force resume of partially downloaded
            files. By default, youtube-dlp will
            resume downloads if possible.
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.NoContinue">
            <summary>
            Do not resume partially downloaded
            files (restart from beginning)
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.NoPart">
            <summary>
            Do not use .part files - write directly
            into output file
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.NoMtime">
            <summary>
            Do not use the Last-modified header to
            set the file modification time
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.WriteDescription">
            <summary>
            Write video description to a
            .description file
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.WriteInfoJson">
            <summary>
            Write video metadata to a .info.json
            file
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.WriteAnnotations">
            <summary>
            Write video annotations to a
            .annotations.xml file
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.LoadInfoJson">
            <summary>
            JSON file containing the video
            information (created with the &quot;--write-
            info-json&quot; option)
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.Cookies">
            <summary>
            File to read cookies from and dump
            cookie jar in
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.CacheDir">
            <summary>
            Location in the filesystem where
            youtube-dlp can store some downloaded
            information permanently. By default
            $XDG_CACHE_HOME/youtube-dlp or ~/.cache
            /youtube-dlp . At the moment, only
            YouTube player files (for videos with
            obfuscated signatures) are cached, but
            that may change.
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.NoCacheDir">
            <summary>
            Disable filesystem caching
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.RemoveCacheDir">
            <summary>
            Delete all filesystem cache files
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.Help">
            <summary>
            Print this help text and exit
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.Version">
            <summary>
            Print program version and exit
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.Update">
            <summary>
            Update this program to latest version.
            Make sure that you have sufficient
            permissions (run with sudo if needed)
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.IgnoreErrors">
            <summary>
            Continue on download errors, for
            example to skip unavailable videos in a
            playlist
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.AbortOnError">
            <summary>
            Abort downloading of further videos (in
            the playlist or the command line) if an
            error occurs
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.NoAbortOnError">
            <summary>
            Resume downloading of further videos (in
            the playlist or the command line) if an
            error occurs
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.DumpUserAgent">
            <summary>
            Display the current browser
            identification
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.ListExtractors">
            <summary>
            List all supported extractors
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.ExtractorDescriptions">
            <summary>
            Output descriptions of all supported
            extractors
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.ForceGenericExtractor">
            <summary>
            Force extraction to use the generic
            extractor
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.DefaultSearch">
            <summary>
            Use this prefix for unqualified URLs.
            For example &quot;gvsearch2:&quot; downloads two
            videos from google videos for youtube-
            dl &quot;large apple&quot;. Use the value &quot;auto&quot;
            to let youtube-dlp guess (&quot;auto_warning&quot;
            to emit a warning when guessing).
            &quot;error&quot; just throws an error. The
            default value &quot;fixup_error&quot; repairs
            broken URLs, but emits an error if this
            is not possible instead of searching.
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.IgnoreConfig">
            <summary>
            Do not read configuration files. When
            given in the global configuration file
            /etc/youtube-dl.conf: Do not read the
            user configuration in ~/.config
            /youtube-dl/config (%APPDATA%/youtube-
            dl/config.txt on Windows)
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.ConfigLocation">
            <summary>
            Location of the configuration file;
            either the path to the config or its
            containing directory.
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.FlatPlaylist">
            <summary>
            Do not extract the videos of a
            playlist, only list them.
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.NoFlatPlaylist">
            <summary>
            Do extract the videos of a
            playlist, only list them.
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.MarkWatched">
            <summary>
            Mark videos watched (YouTube only)
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.NoMarkWatched">
            <summary>
            Do not mark videos watched (YouTube
            only)
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.NoColor">
            <summary>
            Do not emit color codes in output
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.ExtractAudio">
            <summary>
            Convert video files to audio-only files
            (requires ffmpeg/avconv and
            ffprobe/avprobe)
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.AudioFormat">
            <summary>
            Specify audio format: &quot;best&quot;, &quot;aac&quot;,
            &quot;flac&quot;, &quot;mp3&quot;, &quot;m4a&quot;, &quot;opus&quot;, &quot;vorbis&quot;,
            or &quot;wav&quot;; &quot;best&quot; by default; No effect
            without -x
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.AudioQuality">
            <summary>
            Specify ffmpeg/avconv audio quality,
            insert a value between 0 (better) and 9
            (worse) for VBR or a specific bitrate
            like 128K (default 5)
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.RecodeVideo">
            <summary>
            Encode the video to another format if
            necessary (currently supported:
            mp4|flv|ogg|webm|mkv|avi)
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.PostprocessorArgs">
            <summary>
            Give these arguments to the
            postprocessor
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.KeepVideo">
            <summary>
            Keep the video file on disk after the
            post-processing; the video is erased by
            default
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.NoPostOverwrites">
            <summary>
            Do not overwrite post-processed files;
            the post-processed files are
            overwritten by default
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.EmbedSubs">
            <summary>
            Embed subtitles in the video (only for
            mp4, webm and mkv videos)
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.EmbedThumbnail">
            <summary>
            Embed thumbnail in the audio as cover
            art
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.AddMetadata">
            <summary>
            Write metadata to the video file
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.Xattrs">
            <summary>
            Write metadata to the video file&#x27;s
            xattrs (using dublin core and xdg
            standards)
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.Fixup">
            <summary>
            Automatically correct known faults of
            the file. One of never (do nothing),
            warn (only emit a warning),
            detect_or_warn (the default; fix file
            if we can, warn otherwise)
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.FfmpegLocation">
            <summary>
            Location of the ffmpeg/avconv binary;
            either the path to the binary or its
            containing directory.
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.Exec">
            <summary>
            Execute a command on the file after
            downloading and post-processing,
            similar to find&#x27;s -exec syntax.
            Example: --exec &#x27;adb push {}
            /sdcard/Music/ &amp;&amp; rm {}&#x27;
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.Quiet">
            <summary>
            Activate quiet mode
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.NoWarnings">
            <summary>
            Ignore warnings
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.Simulate">
            <summary>
            Do not download the video and do not
            write anything to disk
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.SkipDownload">
            <summary>
            Do not download the video
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.DumpJson">
            <summary>
            Simulate, quiet but print JSON
            information. See the &quot;OUTPUT TEMPLATE&quot;
            for a description of available keys.
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.DumpSingleJson">
            <summary>
            Simulate, quiet but print JSON
            information for each command-line
            argument. If the URL refers to a
            playlist, dump the whole playlist
            information in a single line.
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.Newline">
            <summary>
            Output progress bar as new lines
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.NoProgress">
            <summary>
            Do not print progress bar
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.ConsoleTitle">
            <summary>
            Display progress in console titlebar
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.Verbose">
            <summary>
            Print various debugging information
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.DumpPages">
            <summary>
            Print downloaded pages encoded using
            base64 to debug problems (very verbose)
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.WritePages">
            <summary>
            Write downloaded intermediary pages to
            files in the current directory to debug
            problems
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.PrintTraffic">
            <summary>
            Display sent and read HTTP traffic
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.Format">
            <summary>
            Video format code, see the &quot;FORMAT
            SELECTION&quot; for all the info
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.AllFormats">
            <summary>
            Download all available video formats
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.PreferFreeFormats">
            <summary>
            Prefer free video formats unless a
            specific one is requested
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.ListFormats">
            <summary>
            List all available formats of requested
            videos
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.YoutubeSkipDashManifest">
            <summary>
            Do not download the DASH manifests and
            related data on YouTube videos
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.MergeOutputFormat">
            <summary>
            If a merge is required (e.g.
            bestvideo+bestaudio), output to given
            container format. One of mkv, mp4, ogg,
            webm, flv. Ignored if no merge is
            required
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.PlaylistStart">
            <summary>
            Playlist video to start at (default is
            1)
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.PlaylistEnd">
            <summary>
            Playlist video to end at (default is
            last)
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.PlaylistItems">
            <summary>
            Playlist video items to download.
            Specify indices of the videos in the
            playlist separated by commas like:
            &quot;--playlist-items 1,2,5,8&quot; if you want
            to download videos indexed 1, 2, 5, 8
            in the playlist. You can specify range:
            &quot;--playlist-items 1-3,7,10-13&quot;, it will
            download the videos at index 1, 2, 3,
            7, 10, 11, 12 and 13.
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.MaxDownloads">
            <summary>
            Abort after downloading NUMBER files
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.MinFilesize">
            <summary>
            Do not download any videos smaller than
            SIZE (e.g. 50k or 44.6m)
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.MaxFilesize">
            <summary>
            Do not download any videos larger than
            SIZE (e.g. 50k or 44.6m)
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.Date">
            <summary>
            Download only videos uploaded in this
            date
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.DateBefore">
            <summary>
            Download only videos uploaded on or
            before this date (i.e. inclusive)
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.DateAfter">
            <summary>
            Download only videos uploaded on or
            after this date (i.e. inclusive)
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.MatchFilter">
            <summary>
            Generic video filter. Specify any key
            (see the &quot;OUTPUT TEMPLATE&quot; for a list
            of available keys) to match if the key
            is present, !key to check if the key is
            not present, key &gt; NUMBER (like
            &quot;comment_count &gt; 12&quot;, also works with
            &gt;=, &lt;, &lt;=, !=, =) to compare against a
            number, key = &#x27;LITERAL&#x27; (like &quot;uploader
            = &#x27;Mike Smith&#x27;&quot;, also works with !=) to
            match against a string literal and &amp; to
            require multiple matches. Values which
            are not known are excluded unless you
            put a question mark (?) after the
            operator. For example, to only match
            videos that have been liked more than
            100 times and disliked less than 50
            times (or the dislike functionality is
            not available at the given service),
            but who also have a description, use
            --match-filter &quot;like_count &gt; 100 &amp;
            dislike_count &lt;? 50 &amp; description&quot; .
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.NoPlaylist">
            <summary>
            Download only the video, if the URL
            refers to a video and a playlist.
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.YesPlaylist">
            <summary>
            Download the playlist, if the URL
            refers to a video and a playlist.
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.AgeLimit">
            <summary>
            Download only videos suitable for the
            given age
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.DownloadArchive">
            <summary>
            Download only videos not listed in the
            archive file. Record the IDs of all
            downloaded videos in it.
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.BreakonExisting">
            <summary>
            BreakonExisting
            (experimental)
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.BreakonReject">
            <summary>
            BreakonReject
            (experimental)
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.SkipPlaylistAfterErrors">
            <summary>
            SkipPlaylistAfterErrors
            (experimental)
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.Options.OptionSet.NoDownloadArchiv">
            <summary>
            NoDownloadArchiv
            (experimental)
            </summary>
        </member>
        <member name="T:YouTubeDLPSharp.Process.ProcessExtensions">
            <summary>
            Process extensions for killing full process tree.
            From https://github.com/dotnet/cli/blob/master/test/Microsoft.DotNet.Tools.Tests.Utilities/Extensions/ProcessExtensions.cs.
            </summary>
        </member>
        <member name="T:YouTubeDLPSharp.Process.ProcessRun">
            <summary>
            Provides methods for throttled execution.
            </summary>
        </member>
        <member name="T:YouTubeDLPSharp.RunResult`1">
            <summary>
            Encapsulates the output of a youtube-dlp download operation.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:YouTubeDLPSharp.RunResult`1.Success">
            <summary>
            Indicates whether the operation was successful.
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.RunResult`1.ErrorOutput">
            <summary>
            The accumulated error output.
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.RunResult`1.Data">
            <summary>
            The output data.
            </summary>
        </member>
        <member name="M:YouTubeDLPSharp.RunResult`1.#ctor(System.Boolean,System.String[],`0)">
            <summary>
            Creates a new instance of class RunResult.
            </summary>
        </member>
        <member name="T:YouTubeDLPSharp.Utils">
            <summary>
            Utility methods.
            </summary>
        </member>
        <member name="M:YouTubeDLPSharp.Utils.Sanitize(System.String,System.Boolean)">
            <summary>
            Sanitize a string to be a valid file name.
            Ported from:
            https://github.com/ytdl-org/youtube-dl/blob/33c1c7d80fd99024879a5f087b55b24374385e43/youtube_dl/utils.py#L2067
            </summary>
            <returns></returns>
        </member>
        <member name="M:YouTubeDLPSharp.Utils.GetFullPath(System.String)">
            <summary>
            Returns the absolute path for the specified path string.
            Also searches the environment's PATH variable.
            </summary>
            <param name="fileName">The relative path string.</param>
            <returns>The absolute path or null if the file was not found.</returns>
        </member>
        <member name="T:YouTubeDLPSharp.YouTubeDLP">
            <summary>
            A class providing methods for downloading videos using youtube-dl.
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.YouTubeDLP.YoutubeDLPPath">
            <summary>
            Path to the youtube-dlp executable.
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.YouTubeDLP.FFmpegPath">
            <summary>
            Path to the FFmpeg executable.
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.YouTubeDLP.OutputFolder">
            <summary>
            Path of the folder where items will be downloaded to.
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.YouTubeDLP.OutputFileTemplate">
            <summary>
            Template of the name of the downloaded file on youtube-dlp style.
            See https://github.com/yt-dlp/yt-dlp#output-template.
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.YouTubeDLP.RestrictFilenames">
            <summary>
            If set to true, file names a re restricted to ASCII characters.
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.YouTubeDLP.IgnoreDownloadErrors">
            <summary>
            If set to true, download errors are ignored and downloading is continued.
            </summary>
        </member>
        <member name="M:YouTubeDLPSharp.YouTubeDLP.#ctor(System.Byte)">
            <summary>
            Creates a new instance of the YoutubeDLP class.
            </summary>
            <param name="maxNumberOfProcesses">The maximum number of concurrent youtube-dlp processes.</param>
        </member>
        <member name="M:YouTubeDLPSharp.YouTubeDLP.SetMaxNumberOfProcesses(System.Byte)">
            <summary>
            Sets the maximal number of parallel download processes.
            </summary>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:YouTubeDLPSharp.YouTubeDLP.RunVideoDataFetch(System.String,System.Threading.CancellationToken,System.Boolean,YouTubeDLPSharp.Options.OptionSet)">
            <summary>
            Runs a fetch of information for the given video without downloading the video.
            </summary>
            <param name="url">The URL of the video to fetch information for.</param>
            <param name="ct">A CancellationToken used to cancel the process.</param>
            <param name="flat">If set to true, does not extract information for each video in a playlist.</param>
            <param name="overrideOptions">Override options of the default option set for this run.</param>
            <returns>A RunResult object containing a VideoData object with the requested video information.</returns>
        </member>
        <member name="M:YouTubeDLPSharp.YouTubeDLP.RunVideoDownload(System.String,System.String,YouTubeDLPSharp.Options.DownloadMergeFormat,YouTubeDLPSharp.Options.VideoRecodeFormat,System.Threading.CancellationToken,System.IProgress{YouTubeDLPSharp.DownloadProgress},System.IProgress{System.String},YouTubeDLPSharp.Options.OptionSet,System.String)">
            <summary>
            Runs a download of the specified video with an optional conversion afterwards.
            </summary>
            <param name="url">The URL of the video to be downloaded.</param>
            <param name="format">A format selection string in youtube-dlp style.</param>
            <param name="mergeFormat">If a merge is required, the container format of the merged downloads.</param>
            <param name="recodeFormat">The video format the output will be recoded to after download.</param>
            <param name="ct">A CancellationToken used to cancel the download.</param>
            <param name="progress">A progress provider used to get download progress information.</param>
            <param name="output">A progress provider used to capture the standard output.</param>
            <param name="overrideOptions">Override options of the default option set for this run.</param>
            <param name="postprocess">Neu</param>
            <returns>A RunResult object containing the path to the downloaded and converted video.</returns>
        </member>
        <member name="M:YouTubeDLPSharp.YouTubeDLP.RunAudioDownload(System.String,YouTubeDLPSharp.Options.AudioConversionFormat,System.Threading.CancellationToken,System.IProgress{YouTubeDLPSharp.DownloadProgress},System.IProgress{System.String},YouTubeDLPSharp.Options.OptionSet,System.String)">
            <summary>
            Runs a download of the specified video with and converts it to an audio format afterwards.
            </summary>
            <param name="url">The URL of the video to be downloaded.</param>
            <param name="format">The audio format the video will be converted to after downloaded.</param>
            <param name="ct">A CancellationToken used to cancel the download.</param>
            <param name="progress">A progress provider used to get download progress information.</param>
            <param name="output">A progress provider used to capture the standard output.</param>
            <param name="overrideOptions">Override options of the default option set for this run.</param>
            <param name="postprocess">Neu</param>
            <returns>A RunResult object containing the path to the downloaded and converted video.</returns>
        </member>
        <member name="M:YouTubeDLPSharp.YouTubeDLP.GetDownloadOptions">
            <summary>
            Returns an option set with default options used for most downloading operations.
            </summary>
        </member>
        <member name="P:YouTubeDLPSharp.YouTubeDLPProcess.ExecutablePath">
            <summary>
            Path to the youtube-dlp.exe
            </summary>
        </member>
        <member name="E:YouTubeDLPSharp.YouTubeDLPProcess.OutputReceived">
            <summary>
            youtube-dlp writes to the standard output
            </summary>
        </member>
        <member name="E:YouTubeDLPSharp.YouTubeDLPProcess.ErrorReceived">
            <summary>
            youtube-dlp writes to the error output.
            </summary>
        </member>
        <member name="M:YouTubeDLPSharp.YouTubeDLPProcess.#ctor(System.String)">
            <summary>
            Creates a new instance of the YoutubeDLProcess class.
            </summary>
            <param name="executablePath">Path to the youtube-dlp.exe</param>
        </member>
        <member name="M:YouTubeDLPSharp.YouTubeDLPProcess.RunAsync(System.String[],YouTubeDLPSharp.Options.OptionSet)">
            <summary>
            Invokes youtube-dlp with specific parameters and options.
            </summary>
            <param name="urls">The video URLs to youtube-dlp.</param>
            <param name="options">options to be passed to youtube-dlp.</param>
            <returns>The exit code of the youtube-dlp process.</returns>
        </member>
        <member name="M:YouTubeDLPSharp.YouTubeDLPProcess.RunAsync(System.String[],YouTubeDLPSharp.Options.OptionSet,System.Threading.CancellationToken,System.IProgress{YouTubeDLPSharp.DownloadProgress})">
            <summary>
            Invokes youtube-dlp with specific parameters and options.
            </summary>
            <param name="urls">The video URLs to be passed to youtube-dlp.</param>
            <param name="options">An OptionSet specifying the options to be passed to youtube-dlp.</param>
            <param name="ct">CancellationToken used to cancel the download.</param>
            <param name="progress">A progress provider used to get download progress information.</param>
            <returns>The exit code of the youtube-dlp process.</returns>
        </member>
    </members>
</doc>
